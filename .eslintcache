[{"D:\\ChatApp\\src\\index.js":"1","D:\\ChatApp\\src\\reportWebVitals.js":"2","D:\\ChatApp\\src\\App.js":"3","D:\\ChatApp\\src\\Store.js":"4","D:\\ChatApp\\src\\Main.js":"5","D:\\ChatApp\\src\\_reducers\\indexReducer.js":"6","D:\\ChatApp\\src\\Auth\\Login.js":"7","D:\\ChatApp\\src\\SideBar\\SideBar.js":"8","D:\\ChatApp\\src\\Chat\\Chat.js":"9","D:\\ChatApp\\src\\_reducers\\chatReducer.js":"10","D:\\ChatApp\\src\\firebase.js":"11","D:\\ChatApp\\src\\_actions\\chatActions.js":"12","D:\\ChatApp\\src\\SideBar\\SideBarChat\\SideBarChat.js":"13"},{"size":517,"mtime":1608540519508,"results":"14","hashOfConfig":"15"},{"size":375,"mtime":1608540519508,"results":"16","hashOfConfig":"15"},{"size":355,"mtime":1608619715521,"results":"17","hashOfConfig":"15"},{"size":317,"mtime":1608540519505,"results":"18","hashOfConfig":"15"},{"size":616,"mtime":1608961573759,"results":"19","hashOfConfig":"15"},{"size":133,"mtime":1608540519507,"results":"20","hashOfConfig":"15"},{"size":1506,"mtime":1608959998855,"results":"21","hashOfConfig":"15"},{"size":1984,"mtime":1608962265078,"results":"22","hashOfConfig":"15"},{"size":4512,"mtime":1608959998856,"results":"23","hashOfConfig":"15"},{"size":735,"mtime":1608959998858,"results":"24","hashOfConfig":"15"},{"size":658,"mtime":1608540519507,"results":"25","hashOfConfig":"15"},{"size":689,"mtime":1608620172257,"results":"26","hashOfConfig":"15"},{"size":1707,"mtime":1608962477439,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1a3yfyt",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"43"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\ChatApp\\src\\index.js",[],"D:\\ChatApp\\src\\reportWebVitals.js",[],"D:\\ChatApp\\src\\App.js",["57","58","59","60"],"D:\\ChatApp\\src\\Store.js",[],"D:\\ChatApp\\src\\Main.js",[],"D:\\ChatApp\\src\\_reducers\\indexReducer.js",[],"D:\\ChatApp\\src\\Auth\\Login.js",["61","62","63","64","65","66"],"import React from \"react\";\r\nimport \"./Login.css\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { auth, provider } from \"../firebase\";\r\nimport { setUser } from \"../_actions/chatActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Login({ setUser }) {\r\n  const signIn = () => {\r\n    auth\r\n      .signInWithPopup(provider)\r\n      .then((result) => {\r\n        // This gives you a Google Access Token. You can use it to access the Google API.\r\n        var token = result.credential.accessToken;\r\n        // The signed-in user info.\r\n        var user = result.user;\r\n        setUser(result)\r\n        // console.log(result);\r\n        // ...\r\n      })\r\n      .catch(function (error) {\r\n        // Handle Errors here.\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        // The email of the user's account used.\r\n        var email = error.email;\r\n        // The firebase.auth.AuthCredential type that was used.\r\n        var credential = error.credential;\r\n        // ...\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"login_logo\">\r\n        <img src=\"https://logodix.com/logo/1875807.png\" width=\"50%\" alt=\"\" />\r\n      </div>\r\n      <div className=\"login_btn\">\r\n        <Button onClick={(e) => signIn()}>\r\n          Sign in To WhatsApp with Google\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  user:state.Chat.user\r\n});\r\nexport default connect(mapStateToProps,{setUser})(Login);\r\n",["67","68"],"D:\\ChatApp\\src\\SideBar\\SideBar.js",[],"D:\\ChatApp\\src\\Chat\\Chat.js",["69"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Chat.css\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport AttachFileIcon from \"@material-ui/icons/AttachFile\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport SearchOutlinedIcon from \"@material-ui/icons/SearchOutlined\";\r\nimport InsertEmoticonOutlinedIcon from \"@material-ui/icons/InsertEmoticonOutlined\";\r\nimport MicOutlinedIcon from \"@material-ui/icons/MicOutlined\";\r\nimport { connect } from \"react-redux\";\r\nimport db from \"../firebase\";\r\nimport { auth } from \"../firebase\";\r\nimport { logOut } from \"../_actions/chatActions\";\r\nimport firebase from \"firebase\";\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nfunction Chat({ ChatRoomId, logOut, user }) {\r\n  const [seed, setseed] = useState(\"\");\r\n  const [input, setinput] = useState(\"\");\r\n  const [Room, setRoom] = useState(\"\");\r\n  const [messages, setmessages] = useState([]);\r\n  useEffect(() => {\r\n    setseed(Math.floor(Math.random() * 2000));\r\n    // console.log(ChatRoomId);\r\n  }, []);\r\n  useEffect(() => {\r\n    if (ChatRoomId) {\r\n      db.collection(\"rooms\")\r\n        .doc(ChatRoomId)\r\n        .onSnapshot((snapshot) => setRoom(snapshot.data().name));\r\n\r\n      db.collection(\"rooms\")\r\n        .doc(ChatRoomId)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"asc\")\r\n        .onSnapshot((snapshot) =>\r\n          setmessages(snapshot.docs.map((doc) => doc.data()))\r\n        );\r\n    }\r\n\r\n    return () => {};\r\n  }, [ChatRoomId]);\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    // console.log(\"message : \", input);\r\n    // console.log(\"user : \", user.displayName);\r\n    // console.log(\"time : \", firebase.firestore.FieldValue.serverTimestamp());\r\n\r\n    db.collection(\"rooms\").doc(ChatRoomId).collection(\"messages\").add({\r\n      message: input,\r\n      name: user.displayName,\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n    setinput(\"\");\r\n    // console.log(input);\r\n  };\r\n  const SignOut = () => {\r\n    auth\r\n      .signOut()\r\n      .then(function () {\r\n        logOut();\r\n        // alert('f');\r\n        // Sign-out successful.\r\n\r\n        console.log(\"Sign-out successful.\");\r\n      })\r\n      .catch(function (error) {\r\n        // An error happened.\r\n      });\r\n  };\r\n  let lastseen = new Date(\r\n    messages[messages.length - 1]?.timestamp?.toDate()\r\n  ).toUTCString();\r\n  // console.log(lastseen);\r\n  return (\r\n    <div className=\"chat\">\r\n      <div className=\"chat_header\">\r\n        <Avatar\r\n          src={`https://avatars.dicebear.com/4.5/api/human/${seed}.svg `}\r\n        />\r\n        <div className=\"chat_headerInfo\">\r\n          <h3>{Room}</h3>\r\n          <p>Last Seen {lastseen ? lastseen : \"\"}</p>\r\n        </div>\r\n        <div className=\"chat_headerRight\">\r\n          <IconButton>\r\n            <SearchOutlinedIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <AttachFileIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <ExitToAppIcon onClick={(e) => SignOut()} />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div className=\"chat_body\">\r\n        {messages.map((message) => (\r\n          <p\r\n            className={`chat_message ${\r\n              message.name === user.displayName && \"chat_receiver\"\r\n            }`}\r\n          >\r\n            <span className=\"chat_name\">\r\n              {message.name}\r\n              {/* {!message.name === user.displayName ? message.name : \"\"} */}\r\n            </span>\r\n            {message.message}\r\n            <span className=\"chat_timeStamp\">\r\n              {new Date(message.timestamp?.toDate()).toUTCString()}\r\n            </span>\r\n          </p>\r\n        ))}\r\n      </div>\r\n      <div className=\"chat_footer\">\r\n        <IconButton>\r\n          <InsertEmoticonOutlinedIcon />\r\n        </IconButton>\r\n        <form>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Type a message\"\r\n            className=\"chat_footerInput\"\r\n            value={input}\r\n            onChange={(e) => setinput(e.target.value)}\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            htmltype=\"submit\"\r\n            onClick={(e) => sendMessage(e)}\r\n          ></button>\r\n        </form>\r\n        <IconButton>\r\n          <MicOutlinedIcon />\r\n        </IconButton>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  ChatRoomId: state.Chat.roomId,\r\n  user: state.Chat.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logOut })(Chat);\r\n","D:\\ChatApp\\src\\_reducers\\chatReducer.js",["70"],"D:\\ChatApp\\src\\firebase.js",[],"D:\\ChatApp\\src\\_actions\\chatActions.js",[],"D:\\ChatApp\\src\\SideBar\\SideBarChat\\SideBarChat.js",[],{"ruleId":"71","severity":1,"message":"72","line":1,"column":27,"nodeType":"73","messageId":"74","endLine":1,"endColumn":36},{"ruleId":"75","severity":1,"message":"76","line":10,"column":14,"nodeType":"77","messageId":"78","endLine":10,"endColumn":16},{"ruleId":"71","severity":1,"message":"79","line":11,"column":10,"nodeType":"73","messageId":"74","endLine":11,"endColumn":14},{"ruleId":"71","severity":1,"message":"80","line":11,"column":16,"nodeType":"73","messageId":"74","endLine":11,"endColumn":23},{"ruleId":"71","severity":1,"message":"81","line":14,"column":13,"nodeType":"73","messageId":"74","endLine":14,"endColumn":18},{"ruleId":"71","severity":1,"message":"79","line":16,"column":13,"nodeType":"73","messageId":"74","endLine":16,"endColumn":17},{"ruleId":"71","severity":1,"message":"82","line":23,"column":13,"nodeType":"73","messageId":"74","endLine":23,"endColumn":22},{"ruleId":"71","severity":1,"message":"83","line":24,"column":13,"nodeType":"73","messageId":"74","endLine":24,"endColumn":25},{"ruleId":"71","severity":1,"message":"84","line":26,"column":13,"nodeType":"73","messageId":"74","endLine":26,"endColumn":18},{"ruleId":"71","severity":1,"message":"85","line":28,"column":13,"nodeType":"73","messageId":"74","endLine":28,"endColumn":23},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"71","severity":1,"message":"90","line":5,"column":8,"nodeType":"73","messageId":"74","endLine":5,"endColumn":20},{"ruleId":"91","severity":1,"message":"92","line":5,"column":1,"nodeType":"93","endLine":33,"endColumn":2},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'user' is assigned a value but never used.","'setuser' is assigned a value but never used.","'token' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","no-native-reassign",["94"],"no-negated-in-lhs",["95"],"'MoreVertIcon' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]